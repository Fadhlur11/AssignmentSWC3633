@model RecipeFinder.Models.Meal
@{
    ViewData["Title"] = "Recipe Details";
}

<div class="container mt-5">
    <div class="text-center mb-4">
        <h1 class="fw-bold text-primary">@Model.strMeal</h1>
        <p class="text-muted">
            <strong>Category:</strong> @Model.strCategory |
            <strong>Area:</strong> @Model.strArea
        </p>
    </div>

    <div class="row align-items-start">
        <div class="col-md-5 mb-4">
            <img src="@Model.strMealThumb" class="img-fluid rounded shadow-sm" alt="@Model.strMeal" />
        </div>

        <div class="col-md-7">
            <h4 class="text-secondary mb-3">Ingredients</h4>
            <ul class="list-group list-group-flush mb-4">
                @for (int i = 1; i <= 20; i++)
                {
                    var ingredient = (string?)Model.GetType().GetProperty($"strIngredient{i}")?.GetValue(Model);
                    var measure = (string?)Model.GetType().GetProperty($"strMeasure{i}")?.GetValue(Model);

                    if (!string.IsNullOrWhiteSpace(ingredient))
                    {
                        <li class="list-group-item">
                            <strong>@measure</strong> @ingredient
                        </li>
                    }
                }
            </ul>

            <h4 class="text-secondary mb-3">Instructions</h4>
            <p>@Model.strInstructions</p>

            @if (!string.IsNullOrEmpty(Model.strYoutube))
            {
                <a href="@Model.strYoutube" target="_blank" class="btn btn-outline-danger me-2">
                    🎥 Watch on YouTube
                </a>
            }

            <a asp-controller="Recipe" asp-action="Index" class="btn btn-outline-primary">
                ← Back to Search
            </a>
        </div>
    </div>
</div>
